{"version":3,"sources":["index.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","Square","props","className","onClick","value","Board","this","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"kOAMA,SAASA,EAAgBC,GAWrB,IAVA,IAAMC,EAAO,CACT,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFC,EAAI,EAAIA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cAClBD,EAAMC,GADY,GAC7BE,EAD6B,KAC1BC,EAD0B,KACvBC,EADuB,KAEpC,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GAClE,OAAON,EAAQI,GAGvB,OAAO,KAGX,SAASG,EAAOC,GACZ,OACI,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACKF,EAAMG,Q,IAKbC,E,kKAEF,SAAaV,GAAI,IAAD,OACZ,OAAO,cAACK,EAAD,CAAQI,MAAOE,KAAKL,MAAMR,QAAQE,GAAIQ,QAAS,kBAAM,EAAKF,MAAME,QAAQR,Q,oBAEnF,WACI,OACI,gCACI,sBAAKO,UAAU,YAAf,UACKI,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,MAEvB,sBAAKL,UAAU,YAAf,UACKI,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,MAEvB,sBAAKL,UAAU,YAAf,UACKI,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,a,GArBnBC,IAAMC,WA4BpBC,E,kDAEF,WAAYT,GAAQ,IAAD,8BACf,cAAMA,IACDU,MAAQ,CACTC,QAAS,CAAC,CACNnB,QAASoB,MAAM,GAAGC,KAAK,QAE3BC,WAAY,EACZC,SAAS,GAPE,E,+CAWnB,SAAYrB,GACR,IAAMiB,EAAUN,KAAKK,MAAMC,QAAQK,MAAM,EAAGX,KAAKK,MAAMI,WAAa,GAE9DtB,EADUmB,EAAQA,EAAQhB,OAAS,GACjBH,QAAQwB,QAC5BzB,EAAgBC,IAAYA,EAAQE,KAGxCF,EAAQE,GAAKW,KAAKK,MAAMK,QAAU,IAAM,IACxCV,KAAKY,SAAS,CACVN,QAASA,EAAQO,OAAO,CAAC,CACrB1B,QAASA,KAEbsB,WAAYH,EAAQhB,OACpBoB,SAAUV,KAAKK,MAAMK,a,oBAI7B,SAAOI,GACHd,KAAKY,SAAS,CACVH,WAAYK,EACZJ,QAAUI,EAAO,IAAO,M,oBAIhC,WAAU,IAgBFC,EAhBC,OACCT,EAAUN,KAAKK,MAAMC,QACrBU,EAAUV,EAAQN,KAAKK,MAAMI,YAC7BQ,EAAS/B,EAAgB8B,EAAQ7B,SAEjC+B,EAAQZ,EAAQa,KAAI,SAACL,EAAMM,GAC7B,IAAMC,EAAOD,EACT,eAAiBA,EACjB,mBACJ,OACI,6BACI,wBAAQvB,QAAS,kBAAM,EAAKyB,OAAOF,IAAnC,SAA2CC,KADtCD,MAajB,OALIL,EADAE,EACS,WAAaA,EAEb,iBAAmBjB,KAAKK,MAAMK,QAAU,IAAM,KAIvD,sBAAKd,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAACG,EAAD,CAAOZ,QAAS6B,EAAQ7B,QAASU,QAAS,SAACR,GAAD,OAAO,EAAKkC,YAAYlC,QAEtE,sBAAKO,UAAU,YAAf,UACI,8BAAMmB,IACN,6BAAKG,c,GAnENhB,IAAMC,WA0EzBqB,IAASC,OACL,cAACrB,EAAD,IACAsB,SAASC,eAAe,W","file":"static/js/main.d1937428.chunk.js","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\n\n\nfunction calculateWinner(squares) {\n    const lines =[\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0 ; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n\nfunction Square(props) {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n\n    renderSquare(i) {\n        return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)} />;\n    }\n    render() {\n        return(\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n            }],\n            stepNumber: 0,\n            xIsNext: true,\n        };\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat([{\n                squares: squares,\n            }]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0,\n        });\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        const moves = history.map((step, move) => {\n            const desc = move ?\n                'Go to move #' + move :\n                'Go to game start';\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n            )\n        });\n        \n        let status;\n        if (winner) {\n            status = 'Winner: ' + winner;\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n        \n        return(\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board squares={current.squares} onClick={(i) => this.handleClick(i)} />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n)\n\n"],"sourceRoot":""}